FAQ1. Термины, обозначения и базовое управление процессамиСистема огм состоит из сайта и трех телеграм ботов. Сайт доступен по адресу: http://10.1.0.131/main/  На сайте Логин admin пароль 12345Боты имеют имена @Ogmtestbot – бот для создания заявок по qr-кодам.@masterOGMbot – бот для распределения заявок по сотрудникам.@OGMemployeebot – бот исполняющих сотрудников огмЗаявки – аварийные заявки на ремонт оборудования. Новая заявка – новая, еще не обработанная, никто не назначен на ее выполнение.Принятая заявка – на нее назначен сотрудник.В процессе – заявка в процессе выполнения.Приостановлена – заявка приостановлена. Например, понадобились запчасти, которых нет в наличии и необходимо подождать их прибытия.Завершена – заявка закрыта.ТО – плановое техническое обслуживание оборудованияНештатные работы – работы, не связанные с ремонтом технологического (производящего) оборудования. Такое оборудование не занесено в список оборудования. Примеры: ремонт тельфера, передвинуть шкаф, собрать стеллаж…)ТМЦ – товарно-материальные ценности, потраченные в ходе ремонта/то/нештатной работы.1.1 Создание заявки.а) Заявку можно создать со страницы «Заявки». Если оборудование потеряло возможность производить продукцию, то указываем что оно остановлено. Можно назначить сотрудника, а можно не назначать.б) Заявку можно создать со страницы создания заявок для начальников участков. http://10.1.0.131/pc_query/pc_query. Она отличается тем, что там нельзя назначать сотрудников.в) Заявку можно создать отсканировав qr-код на станке. Для этого необходим установленный мессенджер Телеграм. Открываем камеру, наводим на код, появится ссылка. Переход по ней откроет телеграм бота @Ogmtestbot для создания заявки. Г) Можно создать заявку через телеграм не используя qr-коды. Для этого в @Ogmtestbot нужно нажать на «/» и выбрать команду «Новая заявка без qr-кода». Далее выбрать участок, ну а затем все по-старому.        1.2 Принятие и закрытие заявки	а) Заявку можно принять, установить статус в процессе или закрыть, открыв ее со страницы «Заявки». Здесь же можно назначить/переназначить ее другому сотруднику. При нажатии кнопки «Назначить» сотруднику придет уведомление. Также новые заявки (но не те,что были созданы со страницы «Заявки») придут в виде сообщения в боте мастера огм @masterOGMbot. В боте мастера заявку можно назначить на любого сотрудника ОГМ.	б) При назначении сотрудника, ему в телеграм @OGMemployeebot приходит уведомление, где он может принять заявку. Тогда она получит статус «в процессе». Дальше ее можно в телеграме приостановить или завершить. После этого нужно заполнить потраченные тмц и выполненные работы. Бот сам спросит у вас эти вопросы, нужно просто ему ответить.	в) При закрытии заявки мастерам приходит уведомление о завершении заявки. Начальнику участка тоже приходит уведомление о завершении заявки. Он может принять ремонт нажав кнопку «Принять ремонт» в @OGMemployeebot. 	г) Для ТО и нештатных работ все тоже самое.2 Технические подробностиСайт размещен на сервере взлета под управлением Debian 10. Для подключения к серверу необходимо подключиться по ssh к ip 10.1.0.131 из внутренней сети Взлета (то есть чтобы сделать это из дома, нужно включить vpn Взлета). Пользователь ogm пароль gpIsN4PGВ папке /home/ogm лежат папки DjangoOGM – папка с сайтомDumps – папка с дампами базы данных3 папки с ботами соответствующих названий и папка с test_bot – это простенький бот для тестирования работоспособности, проекту он не требуется.Также лежит папка env2 – виртуальное окружение проекта (Python, библиотеки…)Теперь конкретно1) DjangoOGM. Сайт написан на фреймворке Джанго. Работает из под веб сервера апаче2. Подробно про настройку апачи и джанго можно почитать в интернете. В папке main/static/images лежат картинки с сайта. eq_photos – фотографии станков. Фото имеют названия по eq_id станков напрмиер 184.jpgЭто значит что это фото отобразится на странице станка с eq_id = 184Фото заявок лежат в соседней папке query_photos. Там тот же принцип, только с айди заявок.Еще одна папка это qr_codes. Там лежат qr коды станков по такому же принципу 184.png это кр код станка с eq_id = 184. Как посмотреть eq_id будет в разделе про базу данных. В общем можно просто добавить фотографию с правильным названием в папку и тогда она отобразится на сайте. Однако это экстренный случай, фото станка можно загрузить через сайт, фото заявки загружается через бота создания заявок, а qr код автоматически генерируется при создании заявки. QR-код. Код ведет на такой адрес http://t.me.Ogmtestbot?start=96 каждый код меняет только цифру в конце, этот код для станка с eq_id = 96. Такой код откроет телеграм бота и бот сразу пришлет сообщение с данными этого станка и вопросом про поломку. Такой код можно сделать самостоятельно при помощи любого генератора кодов. Просто указываем там ссылку с нужным адресом. 2) Боты каждый день автоматически перезапускаются с помощью crontab. Это сделано так как они довольно капризные и лучше их почаще перезагружать для избежания ошибок. Возможно сайт тоже стоит перезагружать, однако пока такой потребности не было.3) База данных. http://10.1.0.131:88/phpmyadmin - графический интерфейс. Сама бд работает на mysql. Пользователь Django пароль password. В пхпмайадмин заходим в бд ogm4. Здесь мы можем менять любые записи. Время в таблице записывается в формате utc (с 25.12.2020, до этого записывалось в формате utc+3)Важные таблицы:Таблица queries. Это таблица с заявками. Поля:Query_id – уникальный номер заявкиEq_id – уникальный номер станка на который заявкаPost_time – время создания заявкиReason – причина поломкиMsg – сообщение от создателя заявкиQuery_status – статус заявкиStart_time – время начала выполнения заявкиStop_time – время завершения заявкиJson_emp – в формате json записаны уникальные номера сотрудников, назначенных на заявкуAppointer – Кто назначил на заявку  Photo_name – путь к фото (если есть)Таблица equipmentEq_id – уникальный номер станкаInvnum – инвентарный номерEq_name – названиеEq_type – типArea – участокEq_status – статус: работает или остановленShift – количество сменCategory – категория Таблица employeesEmployee_id – уникалный номер сотрудникаFio – фиоTg_id – телеграм айди Master – является ли мастером (только мастер может пользоваться мастер ботом)Таблица maintenanceId – уник. Номер ТОStart_time – время начала ТОEnd_time – время конца ТОEmployee_id – номер назначеннного сотрудникаComment – комментарий сотруднкиаStatus – статус ТОMonth_start – техническое поле для заполнения статистикиShift_end техническое поле для заполнения статистикиShift_start техническое поле для заполнения статистикиExpected_time – ожидаемая длительностьPlan_date – запланированная датаStatus2 – еще статус по типу переносPlan2_date – дата на которую перенеслиТаблица worktime – таблица времени когда сотрудники работалиId – номер работыQuery_id – номер заявки по которой работалиEmployee_id – номер сотрудникаStart_time – начало работыStop_time – конец работыWork_id – номер нештатной работы (если работали не по заявке а по нештатке)Таблица unstated_works – то же самое что и queriesТаблица types – таблица типов оборудованияТаблица reasons – виды причин поломокТаблица eq_stoptime – Таблица времени остановок оборудования. Когда оборудование останавливается (неважно через сайт или бота), то создается новая запись с eq_id оборудования и временем остановки stop_time. Когда оборудование снова начинает работать, то запись дополняется временем начала работы start_time. Остаьные поля технические, нужны для работы статистики. Таблица daily_tasks – таблица ежедневных задач. Они создаются через мастер бота. Обращаю внимание что программа срезает первый и последний абзац для удобства копирования типовой формы ежедневных задач из вотсапа.Таблица comments – содержит комментарии к заявкам и работам.Таблица supplies – содержит потраченные тмц к заявкам, работам и ТО. Принцип везде тот же: есть уникальный номер заявки, станка, сотрудника и  что было потрачено. В целом все можно редактировать но аккуратно (например исправляя дату, важно соблюдать формат записанный в бд). Для понимая своих действий лучше ознакомится с sql и пхпмайадмин, но впринципе не обязательно.Остальные таблицы являются техническими их трогать крайне не рекомендуется. ЧТО делать при ошибках?1) При отправке или создании заявки/ТО/нештатной работы возможна ошибка “Server reset connection”. При этом сама заявка создается, а сообщение в телеграм сотрудника не приходит. При появлении такой ошибки рекомендуется пересоздать заявку, а старую удалить. Это ошибка означает что соединение с сервером телеграм происходило с проблемами. Наиболее вероятно это связано с тем что боты работают из корпоративной сети и впн. Большое число промежуточных звеньев между сервером телеграма и нашим сервером создает проблемы в соединении. Ошибка устранена! Блоки отправки сообщений заключены в блоки try…except с циклом на отправку.2) Статистика читает информацию по простоям опираясь на время начала и конца ремонта/ТО/работы. Возможны ситуации, когда неправильно записанная дата или отсутствие записи по како- либо причине (ошибка при заполнении вручную/программный сбой/ненайденный баг) повлияет на отображение статистики, а скорее всего просто приведет к ошибке. В ошибке всегда указано, где именно произошла ошибка, так что найти проблему обычно не составляет труда, главное понять при считывании с какой таблицы произошла ошибка.СТАТИСТИКАФормула для расчета коэффицента готовности:((n*40-t_то^план )-t_(вын.пр.)-(t_то^реал-t_то^план))/(n*40-t_то^план )Гдеn – число единиц оборудования40 часов в неделюt_то^план-запланированное время на ТО на неделе, часыt_то^реал-реальное время потраченное на ТО на неделе, часыt_(вын.пр.)-время вынужденного простоя на неделе (аварийные поломки), часы